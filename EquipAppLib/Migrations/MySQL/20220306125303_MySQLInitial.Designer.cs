// <auto-generated />
using System;
using EquipAppLib.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EquipAppLib.Migrations.MySQL
{
    [DbContext(typeof(EquipAppDb))]
    [Migration("20220306125303_MySQLInitial")]
    partial class MySQLInitial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EquipAppLib.Entityes.Cabinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cabinets");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Patronymic")
                        .HasColumnType("longtext");

                    b.Property<string>("Surname")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<decimal>("InventoryNumber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("longtext");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkplaceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("WorkplaceId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.EquipmentParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("ParameterId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ParameterId");

                    b.ToTable("EquipmentsParameters");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.TypeEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TypesEquipment");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.Workplace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CabinetId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CabinetId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Workplaces");
                });

            modelBuilder.Entity("ParameterTypeEquipment", b =>
                {
                    b.Property<int>("EquipmentTypesId")
                        .HasColumnType("int");

                    b.Property<int>("ParametersId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentTypesId", "ParametersId");

                    b.HasIndex("ParametersId");

                    b.ToTable("ParameterTypeEquipment");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.Equipment", b =>
                {
                    b.HasOne("EquipAppLib.Entityes.TypeEquipment", "Type")
                        .WithMany("Equipments")
                        .HasForeignKey("TypeId");

                    b.HasOne("EquipAppLib.Entityes.Workplace", "Workplace")
                        .WithMany("Equipments")
                        .HasForeignKey("WorkplaceId");

                    b.Navigation("Type");

                    b.Navigation("Workplace");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.EquipmentParameter", b =>
                {
                    b.HasOne("EquipAppLib.Entityes.Equipment", "Equipment")
                        .WithMany("EquipmentParameters")
                        .HasForeignKey("EquipmentId");

                    b.HasOne("EquipAppLib.Entityes.Parameter", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId");

                    b.Navigation("Equipment");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.Workplace", b =>
                {
                    b.HasOne("EquipAppLib.Entityes.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabinetId");

                    b.HasOne("EquipAppLib.Entityes.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Cabinet");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ParameterTypeEquipment", b =>
                {
                    b.HasOne("EquipAppLib.Entityes.TypeEquipment", null)
                        .WithMany()
                        .HasForeignKey("EquipmentTypesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EquipAppLib.Entityes.Parameter", null)
                        .WithMany()
                        .HasForeignKey("ParametersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EquipAppLib.Entityes.Equipment", b =>
                {
                    b.Navigation("EquipmentParameters");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.TypeEquipment", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("EquipAppLib.Entityes.Workplace", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
